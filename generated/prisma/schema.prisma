// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum MenuType {
  MENU // 主体菜单项（目录或页面）
  FUNCTION // 按钮/权限点
}

model User {
  id       String  @id @default(cuid())
  username String  @unique
  password String
  name     String
  isEnable Boolean @default(true)

  roles Role[] @relation("UserRoles")

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  createdBy String?
  updatedBy String?
  deleteBy  String?

  remark String?
}

model Role {
  id   String @id @default(cuid())
  name String @unique
  code String @unique

  users       User[]       @relation("UserRoles")
  menus       Menu[]       @relation("RoleMenus")
  permissions Permission[] @relation("RolePermissions")

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  createdBy String?
  updatedBy String?
  deleteBy  String?

  remark String?
}

model Menu {
  id            String  @id @default(cuid())
  parentId      String?
  title         String
  routePath     String
  componentPath String?
  icon          String?
  order         Int     @default(0)

  type MenuType @default(MENU)

  isHidden  Boolean @default(false)
  keepAlive Boolean @default(false)
  isEnable  Boolean @default(true)

  permissions Permission[] // 子功能权限

  roles Role[] @relation("RoleMenus")

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  createdBy String?
  updatedBy String?
  deleteBy  String?

  remark String?
}

model Permission {
  id          String  @id @default(cuid())
  code        String  @unique // eg. "user:add"
  name        String // eg. "新增用户"
  description String?

  menuId String
  menu   Menu   @relation(fields: [menuId], references: [id])

  roles Role[] @relation("RolePermissions")

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  createdBy String?
  updatedBy String?
  deleteBy  String?

  remark String?
}
